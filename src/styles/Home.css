/* src/styles/Home.css */
.home-container {
    position: relative;
    width: 100%;
    overflow-x: hidden; /* Empêche le défilement horizontal accidentel */
    color: white;
}

/* Commentez ou supprimez ces règles pour éviter les conflits avec Lenis */
/*
html, body {
    scroll-behavior: smooth;
    scroll-snap-type: y proximity;
    height: 100%;
}

section {
    scroll-snap-align: start;
    scroll-snap-stop: always;
}
*/

/* Hero Section - Ces styles seront principalement gérés par Hero.css */
.hero-section { /* Peut être conservé si Hero est une section spécifique dans Home.tsx */
    /* min-height: 100vh; */ /* Utilisez min-height si vous voulez que la section prenne au moins toute la hauteur */
    height: 100vh; /* Si vous voulez qu'elle prenne exactement toute la hauteur */
    width: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    position: relative;
    padding: 0 2rem;
    z-index: 2; /* Assurez-vous qu'il est au-dessus de l'arrière-plan Amazonia */
}

.hero-content { /* S'il y a un conteneur .hero-content dans Hero.tsx */
    text-align: center;
    z-index: 10; /* Au-dessus des autres éléments du héros si nécessaire */
    max-width: 800px;
}

/* Les styles .hero-text, .hero-text:first-child, .hero-text:last-child
   seront déplacés et adaptés dans src/styles/Hero.css comme .hero-title et .hero-subtitle */


/* Section Content - Styles généraux pour les sections dans Home.tsx */
.section-content {
    padding: 5rem 2rem;
    max-width: 1200px;
    margin: 0 auto;
    position: relative;
    z-index: 2; /* Au-dessus de l'arrière-plan Amazonia */
    min-height: 100vh; /* Pour que chaque section prenne au moins la hauteur de la fenêtre */
    display: flex;
    flex-direction: column;
    justify-content: center;
}

.section-title {
    text-align: center;
    font-size: clamp(2rem, 5vw, 3.5rem);
    margin-bottom: 3rem;
    color: white;
    background: linear-gradient(45deg, #ffffff, #a0d8ef);
    -webkit-background-clip: text;
    background-clip: text;
    -webkit-text-fill-color: transparent;
    letter-spacing: -0.03em;
}

/* Services Grid with Enhanced Animations */
.services-section { /* Si c'est une classe pour une section spécifique dans Home.tsx */
    padding: 5rem 2rem;
    position: relative;
    min-height: 100vh;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

.services-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 2rem;
    margin-top: 3rem;
    will-change: transform, opacity;
    /* transition: all 0.8s cubic-bezier(0.17, 0.67, 0.83, 0.67); */ /* Peut être géré par GSAP */
}

.service-card {
    background: rgba(10, 56, 69, 0.6);
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
    padding: 2rem;
    border-radius: 16px;
    color: white;
    transition: all 0.5s cubic-bezier(0.17, 0.67, 0.83, 0.67);
    border: 1px solid rgba(255, 255, 255, 0.1);
    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
    overflow: hidden;
    position: relative;
    cursor: pointer;
    height: 280px; /* Hauteur fixe initiale */
    transform-origin: center;
}

.service-card.expanded {
    cursor: default;
    z-index: 10;
    height: 400px; /* Hauteur lorsque la carte est agrandie */
    transform: scale(1.05);
}

.service-card::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 4px;
    background: linear-gradient(90deg, #051620, #a0d8ef, #051620);
    opacity: 0;
    transition: opacity 0.4s ease;
}

.service-card:hover::before {
    opacity: 1;
}

.service-card h3 {
    font-size: 1.5rem;
    margin-bottom: 1rem;
    color: #a0d8ef;
}

.service-card p {
    font-size: 1rem;
    line-height: 1.6;
    opacity: 0.8;
    margin-bottom: 1.5rem;
    color: white;
}

.service-details {
    height: 0;
    opacity: 0;
    transform: translateY(20px);
    transition: all 0.6s cubic-bezier(0.17, 0.67, 0.83, 0.67);
    overflow: hidden;
}

.service-card.expanded .service-details {
    height: auto; /* Permet au contenu de définir la hauteur */
    opacity: 1;
    transform: translateY(0);
    margin-top: 1.5rem;
}

.learn-more-btn {
    background: linear-gradient(45deg, #0A3845, #1a5769);
    color: white;
    border: none;
    padding: 0.8rem 1.5rem;
    border-radius: 50px;
    cursor: pointer;
    font-weight: 600;
    margin-top: 1rem;
    transition: all 0.3s ease;
    transform: translateY(0);
    opacity: 0.95;
}

.learn-more-btn:hover {
    background: linear-gradient(45deg, #1a5769, #0A3845);
    transform: translateY(-3px);
    box-shadow: 0 6px 12px rgba(0,0,0,0.2);
    opacity: 1;
}


/* Animation for timeline reveal */
@keyframes fadeSlideUp {
    from {
        opacity: 0;
        transform: translateY(50px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

.section-animated {
    animation: fadeSlideUp 0.8s forwards;
    opacity: 0;
}

/* Enhanced hover states for service cards */
.service-card:hover:not(.expanded) {
    transform: translateY(-10px) scale(1.03);
    box-shadow: 0 15px 40px rgba(0, 0, 0, 0.25);
}

/* Improved gradient text for better visibility */
.gradient-text {
    background: linear-gradient(45deg, #ffffff, #a0d8ef);
    -webkit-background-clip: text;
    background-clip: text;
    -webkit-text-fill-color: transparent;
}

/* Media queries for responsive design */
@media (max-width: 768px) {
    .services-grid {
        grid-template-columns: 1fr;
    }

    .service-card {
        height: auto; /* Hauteur auto sur mobile pour s'adapter au contenu */
        min-height: 200px; /* Hauteur minimale */
    }

    .service-card.expanded {
        height: auto; /* Hauteur auto sur mobile pour s'adapter au contenu */
    }
}